// Generated by Dagger (https://google.github.io/dagger).
package app.doscervezas.avocado.di;

import app.doscervezas.avocado.db.SpendDatabase;
import app.doscervezas.avocado.db.dao.BudgetDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideBudgetDaoFactory implements Factory<BudgetDao> {
  private final AppModule module;

  private final Provider<SpendDatabase> spendDatabaseProvider;

  public AppModule_ProvideBudgetDaoFactory(
      AppModule module, Provider<SpendDatabase> spendDatabaseProvider) {
    this.module = module;
    this.spendDatabaseProvider = spendDatabaseProvider;
  }

  @Override
  public BudgetDao get() {
    return provideInstance(module, spendDatabaseProvider);
  }

  public static BudgetDao provideInstance(
      AppModule module, Provider<SpendDatabase> spendDatabaseProvider) {
    return proxyProvideBudgetDao(module, spendDatabaseProvider.get());
  }

  public static AppModule_ProvideBudgetDaoFactory create(
      AppModule module, Provider<SpendDatabase> spendDatabaseProvider) {
    return new AppModule_ProvideBudgetDaoFactory(module, spendDatabaseProvider);
  }

  public static BudgetDao proxyProvideBudgetDao(AppModule instance, SpendDatabase spendDatabase) {
    return Preconditions.checkNotNull(
        instance.provideBudgetDao(spendDatabase),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
