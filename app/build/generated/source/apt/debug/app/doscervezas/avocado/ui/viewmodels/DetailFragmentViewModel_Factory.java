// Generated by Dagger (https://google.github.io/dagger).
package app.doscervezas.avocado.ui.viewmodels;

import app.doscervezas.avocado.db.dao.BudgetDao;
import app.doscervezas.avocado.db.dao.SpendDao;
import app.doscervezas.avocado.repository.DataRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DetailFragmentViewModel_Factory implements Factory<DetailFragmentViewModel> {
  private final Provider<DataRepository> dataRepositoryProvider;

  private final Provider<SpendDao> spendDaoProvider;

  private final Provider<BudgetDao> budgetDaoProvider;

  public DetailFragmentViewModel_Factory(
      Provider<DataRepository> dataRepositoryProvider,
      Provider<SpendDao> spendDaoProvider,
      Provider<BudgetDao> budgetDaoProvider) {
    this.dataRepositoryProvider = dataRepositoryProvider;
    this.spendDaoProvider = spendDaoProvider;
    this.budgetDaoProvider = budgetDaoProvider;
  }

  @Override
  public DetailFragmentViewModel get() {
    return provideInstance(dataRepositoryProvider, spendDaoProvider, budgetDaoProvider);
  }

  public static DetailFragmentViewModel provideInstance(
      Provider<DataRepository> dataRepositoryProvider,
      Provider<SpendDao> spendDaoProvider,
      Provider<BudgetDao> budgetDaoProvider) {
    return new DetailFragmentViewModel(
        dataRepositoryProvider.get(), spendDaoProvider.get(), budgetDaoProvider.get());
  }

  public static DetailFragmentViewModel_Factory create(
      Provider<DataRepository> dataRepositoryProvider,
      Provider<SpendDao> spendDaoProvider,
      Provider<BudgetDao> budgetDaoProvider) {
    return new DetailFragmentViewModel_Factory(
        dataRepositoryProvider, spendDaoProvider, budgetDaoProvider);
  }

  public static DetailFragmentViewModel newDetailFragmentViewModel(
      DataRepository dataRepository, SpendDao spendDao, BudgetDao budgetDao) {
    return new DetailFragmentViewModel(dataRepository, spendDao, budgetDao);
  }
}
